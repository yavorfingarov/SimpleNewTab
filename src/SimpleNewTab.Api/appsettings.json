{
    "AllowedHosts": "*",
    "Bing": {
        "BaseUrl": "https://www.bing.com",
        "LatestImageRoute": "/HPImageArchive.aspx?format=js&idx=0&n=1&mkt=en-US",
        "UserAgentComment": "(+https://github.com/yavorfingarov/SimpleNewTab)"
    },
    "NLog": {
        "internalLogLevel": "Error",
        "time": {
            "type": "FastUTC"
        },
        "extensions": [
            {
                "assembly": "NLog.Web.AspNetCore"
            }
        ],
        "targets": {
            "console": {
                "type": "ColoredConsole",
                "layout": "${longdate} - ${logger} - ${aspnet-traceidentifier:ignoreActivityId=true}${newline}[${level:uppercase=true}] ${message}${onexception:inner=${newline}${exception:format=tostring}}${newline}"
            },
            "db": {
                "type": "Database",
                "dbProvider": "System.Data.SQLite.SQLiteConnection, System.Data.SQLite",
                "install-command": {
                    "text": "CREATE TABLE IF NOT EXISTS Log(Timestamp TEXT NOT NULL, Level TEXT NOT NULL, Logger TEXT NOT NULL, Message TEXT NOT NULL, Properties TEXT NOT NULL, Exception TEXT, RequestId TEXT);"
                },
                "commandText": "INSERT INTO Log (Timestamp, Level, Logger, Message, Properties, Exception, RequestId) VALUES (@Timestamp, @Level, @Logger, @Message, @Properties, @Exception, @RequestId);",
                "parameters": [
                    {
                        "name": "@Timestamp",
                        "layout": "${longdate}"
                    },
                    {
                        "name": "@Level",
                        "layout": "${level:uppercase=true}"
                    },
                    {
                        "name": "@Logger",
                        "layout": "${logger}"
                    },
                    {
                        "name": "@Message",
                        "layout": "${message}"
                    },
                    {
                        "name": "@Properties",
                        "layout": {
                            "type": "JsonLayout",
                            "includeEventProperties": true,
                            "renderEmptyObject": true,
                            "suppressSpaces": true
                        }
                    },
                    {
                        "name": "@Exception",
                        "layout": "${exception:format=tostring}",
                        "allowDbNull": true
                    },
                    {
                        "name": "@RequestId",
                        "layout": "${aspnet-traceidentifier:ignoreActivityId=true}",
                        "allowDbNull": true
                    }
                ]
            }
        },
        "rules": {
            "0": {
                "logger": "Microsoft.*",
                "finalMinLevel": "Warn"
            },
            "1": {
                "logger": "System.Net.Http.*",
                "finalMinLevel": "Warn"
            },
            "2": {
                "logger": "Polly",
                "finalMinLevel": "Error"
            },
            "99": {
                "logger": "*",
                "minLevel": "Debug",
                "writeTo": "console, db"
            }
        }
    }
}
